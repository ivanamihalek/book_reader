package com.dogmaticcentral.bookreader.data.database
import androidx.room.*

@Entity(tableName = "books")
data class Book(
    @PrimaryKey(autoGenerate = true)
    @ColumnInfo(defaultValue = "1")  // Default value changed to 1
    val id: Int = 1,  // Autogenerated primary key

    @ColumnInfo(name = "title")
    val title: String,

    @ColumnInfo(name = "author")
    val author: String
)

@Entity(
    tableName = "chapters",
    foreignKeys = [
        ForeignKey(
            entity = Book::class,
            parentColumns = ["id"],
            childColumns = ["bookId"],
            onDelete = ForeignKey.CASCADE
        )
    ],
    indices = [Index(value = ["bookId"], name = "chapter_bookId")]
)
data class Chapter(
    @PrimaryKey(autoGenerate = true)
    @ColumnInfo(defaultValue = "1")  // Default value changed to 1
    val id: Int = 1,  // Autogenerated primary key

    @ColumnInfo(name = "bookId")
    val bookId: Int,  // Note: this should be Int to match books.id type

    @ColumnInfo(name = "title")
    val title: String,

    @ColumnInfo(name = "fileName")
    val fileName: String,

    @ColumnInfo(name = "playTime", defaultValue = "0")
    val playTime: Int = 0,

    @ColumnInfo(name = "lastPlayedPosition", defaultValue = "0")
    val lastPlayedPosition: Int = 0,

    @ColumnInfo(name = "lastPlayedTimestamp", defaultValue = "0")
    val lastPlayedTimestamp: Long = 0L,

    @ColumnInfo(name = "finishedPlaying", defaultValue = "0")
    val finishedPlaying: Boolean = false

)
